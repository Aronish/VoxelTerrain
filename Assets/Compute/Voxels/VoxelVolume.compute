#pragma kernel GenerateVoxelVolume
#pragma kernel ApplyConstructiveSolidGeometryOperations

#include "Assets/Compute/Voxels/Include/Noise.hlsl"
#include "Assets/Compute/Voxels/Include/Voxel.hlsl"
#include "Assets/Compute/Voxels/Include/VoxelVolume.hlsl"

[numthreads(4, 4, 4)]
void GenerateVoxelVolume(uint3 voxelID : SV_DispatchThreadID)
{
    if (IsOutOfVoxelVolumeBounds(voxelID))
    {
        return;
    }

    float3 worldPosition = VoxelVolumeToWorldSpace(VoxelToVoxelVolumeSpace(voxelID));
    float4 value_gradient = GenerateLayeredFBMNoise(worldPosition);

    SetVoxel(voxelID, Voxel::Create(value_gradient.x, value_gradient.yzw));
}

[numthreads(4, 4, 4)]
void ApplyConstructiveSolidGeometryOperations(uint3 voxelID : SV_DispatchThreadID)
{
    if (IsOutOfVoxelVolumeBounds(voxelID))
    {
        return;
    }
}